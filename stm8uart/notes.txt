/*******************************************************************************
    Примеры к статье "Модуль UART STM8. Справочные данные."
    Передача строки по прерыванияю TXE.
    url: www.eugenemcu.ru/publ/11-1-0-69
    mcu: STM8S105C6, board - STM8 Discovery, CLK - external 16MHz.
*******************************************************************************/

     #include "iostm8s105c6.h"
     #include "intrinsics.h" //Здесь описана функция __enable_interrupt()

     unsigned char HELLO[]="Hello, I'm STM8S105C6, but who are you?";
     unsigned char *byteNum = HELLO; // Указатель на передаваемый байт.
     void main( void )
     {
          CLK_ECKR_HSEEN=1; // Разрешаем работу генератора с внешним кварцем (HSEEN)
          CLK_SWCR_SWEN=1; // Разрешаем переключение генераторов;
          CLK_SWR=0xB4; //Выбираем clock от кварцевого генератора (HSE)
          CLK_CKDIVR=0; //Делители частоты на 1 - частота ядра максимальная.
          while(CLK_CMSR!=0xB4); //Ждем стабилизации частоты
          UART2_CR2_REN=UART2_CR2_TEN=1; // Разрешить выводы TX, RX.
          UART2_BRR2 = 0x0B; UART2_BRR1 = 0x08; // BaudRate = 115200.
          __enable_interrupt(); //Разрешаем прерывания.
          UART2_CR2_TIEN=1; // Разрешить прерывание по TXE. Начало передачи.
          
          while(1)
          { 
          }
     }
     #pragma vector=UART2_T_TXE_vector
     __interrupt void UART2_TXE(void)
     {
          if (*byteNum) 
          {
               UART2_DR=*byteNum; // Отправить байт.
               byteNum++;
          }
          else UART2_CR2_TIEN=0; // Запретить прерывания по TXE, всё передано.
     }
     
/*******************************************************************************
    Примеры к статье "Модуль UART STM8. Справочные данные."
    Приём и отправка байта.
    url: www.eugenemcu.ru/publ/11-1-0-69
    mcu: STM8S105C6, board - STM8 Discovery, CLK - external 16MHz.
*******************************************************************************/

     #include "iostm8s105c6.h"
     #include "intrinsics.h" //Здесь описана функция __enable_interrupt()
 
     void main( void )
     {
          CLK_ECKR_HSEEN=1; // Разрешаем работу генератора с внешним кварцем (HSEEN)
          CLK_SWCR_SWEN=1; // Разрешаем переключение генераторов;
          CLK_SWR=0xB4; //Выбираем clock от кварцевого генератора (HSE)
          CLK_CKDIVR=0; //Делители частоты на 1 - частота ядра максимальная.
          while(CLK_CMSR!=0xB4); //Ждем стабилизации частоты
          UART2_CR2_REN=UART2_CR2_TEN=1; // Разрешить выводы TX, RX.
          UART2_BRR2 = 0x0B; UART2_BRR1 = 0x08; // BaudRate = 115200. 
          UART2_CR2_RIEN=1; // Разрешить прерывание по RXE.
          __enable_interrupt(); //Разрешаем прерывания
          while(1)
          { 
          }
     }
 
     #pragma vector=UART2_R_OR_vector
     __interrupt void UART2_RXE(void)
     {
          UART2_DR=++UART2_DR; // Декремент и отправка принятого числа.
     }