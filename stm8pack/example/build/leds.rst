                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.2 #8938 (Jan 23 2014) (Linux)
                                      4 ; This file was generated Sun Jan 26 19:56:14 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module leds
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; Stack segment in internal ram 
                                     23 ;--------------------------------------------------------
                                     24 	.area	SSEG
      000000                         25 __start__stack:
      000000                         26 	.ds	1
                                     27 
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; interrupt vector 
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
      008000                         36 __interrupt_vect:
      008000 82 00 80 83             37 	int s_GSINIT ;reset
      008004 82 00 00 00             38 	int 0x0000 ;trap
      008008 82 00 00 00             39 	int 0x0000 ;int0
      00800C 82 00 00 00             40 	int 0x0000 ;int1
      008010 82 00 00 00             41 	int 0x0000 ;int2
      008014 82 00 00 00             42 	int 0x0000 ;int3
      008018 82 00 00 00             43 	int 0x0000 ;int4
      00801C 82 00 00 00             44 	int 0x0000 ;int5
      008020 82 00 00 00             45 	int 0x0000 ;int6
      008024 82 00 00 00             46 	int 0x0000 ;int7
      008028 82 00 00 00             47 	int 0x0000 ;int8
      00802C 82 00 00 00             48 	int 0x0000 ;int9
      008030 82 00 00 00             49 	int 0x0000 ;int10
      008034 82 00 00 00             50 	int 0x0000 ;int11
      008038 82 00 00 00             51 	int 0x0000 ;int12
      00803C 82 00 00 00             52 	int 0x0000 ;int13
      008040 82 00 00 00             53 	int 0x0000 ;int14
      008044 82 00 00 00             54 	int 0x0000 ;int15
      008048 82 00 00 00             55 	int 0x0000 ;int16
      00804C 82 00 00 00             56 	int 0x0000 ;int17
      008050 82 00 00 00             57 	int 0x0000 ;int18
      008054 82 00 00 00             58 	int 0x0000 ;int19
      008058 82 00 00 00             59 	int 0x0000 ;int20
      00805C 82 00 00 00             60 	int 0x0000 ;int21
      008060 82 00 00 00             61 	int 0x0000 ;int22
      008064 82 00 00 00             62 	int 0x0000 ;int23
      008068 82 00 00 00             63 	int 0x0000 ;int24
      00806C 82 00 00 00             64 	int 0x0000 ;int25
      008070 82 00 00 00             65 	int 0x0000 ;int26
      008074 82 00 00 00             66 	int 0x0000 ;int27
      008078 82 00 00 00             67 	int 0x0000 ;int28
      00807C 82 00 00 00             68 	int 0x0000 ;int29
                                     69 ;--------------------------------------------------------
                                     70 ; global & static initialisations
                                     71 ;--------------------------------------------------------
                                     72 	.area HOME
                                     73 	.area GSINIT
                                     74 	.area GSFINAL
                                     75 	.area GSINIT
      008083                         76 __sdcc_gs_init_startup:
      008083                         77 __sdcc_init_data:
                                     78 ; stm8_genXINIT() start
      008083 AE 00 00         [ 2]   79 	ldw x, #l_DATA
      008086 27 07            [ 1]   80 	jreq	00002$
      008088                         81 00001$:
      008088 72 4F 00 00      [ 1]   82 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]   83 	decw x
      00808D 26 F9            [ 1]   84 	jrne	00001$
      00808F                         85 00002$:
      00808F AE 00 00         [ 2]   86 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]   87 	jreq	00004$
      008094                         88 00003$:
      008094 D6 81 00         [ 1]   89 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 00         [ 1]   90 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]   91 	decw	x
      00809B 26 F7            [ 1]   92 	jrne	00003$
      00809D                         93 00004$:
                                     94 ; stm8_genXINIT() end
                                     95 	.area GSFINAL
      00809D CC 80 80         [ 2]   96 	jp	__sdcc_program_startup
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME
                                    101 	.area HOME
      008080                        102 __sdcc_program_startup:
      008080 CC 80 CB         [ 2]  103 	jp	_main
                                    104 ;	return from main will return to caller
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CODE
                                    109 ;	leds.c: 4: static void delay(uint32_t t)
                                    110 ;	-----------------------------------------
                                    111 ;	 function delay
                                    112 ;	-----------------------------------------
      0080A0                        113 _delay:
      0080A0 52 08            [ 2]  114 	sub	sp, #8
                                    115 ;	leds.c: 6: while(t--);
      0080A2 7B 0B            [ 1]  116 	ld	a, (0x0b, sp)
      0080A4 6B 05            [ 1]  117 	ld	(0x05, sp), a
      0080A6 16 0D            [ 2]  118 	ldw	y, (0x0d, sp)
      0080A8 7B 0C            [ 1]  119 	ld	a, (0x0c, sp)
      0080AA                        120 00101$:
      0080AA 6B 02            [ 1]  121 	ld	(0x02, sp), a
      0080AC 93               [ 1]  122 	ldw	x, y
      0080AD 88               [ 1]  123 	push	a
      0080AE 7B 06            [ 1]  124 	ld	a, (0x06, sp)
      0080B0 6B 02            [ 1]  125 	ld	(0x02, sp), a
      0080B2 84               [ 1]  126 	pop	a
      0080B3 72 A2 00 01      [ 2]  127 	subw	y, #0x0001
      0080B7 A2 00            [ 1]  128 	sbc	a, #0x00
      0080B9 88               [ 1]  129 	push	a
      0080BA 7B 06            [ 1]  130 	ld	a, (0x06, sp)
      0080BC A2 00            [ 1]  131 	sbc	a, #0x00
      0080BE 6B 06            [ 1]  132 	ld	(0x06, sp), a
      0080C0 84               [ 1]  133 	pop	a
      0080C1 5D               [ 2]  134 	tnzw	x
      0080C2 26 E6            [ 1]  135 	jrne	00101$
      0080C4 1E 01            [ 2]  136 	ldw	x, (0x01, sp)
      0080C6 26 E2            [ 1]  137 	jrne	00101$
      0080C8 5B 08            [ 2]  138 	addw	sp, #8
      0080CA 81               [ 4]  139 	ret
                                    140 ;	leds.c: 9: int main( void )
                                    141 ;	-----------------------------------------
                                    142 ;	 function main
                                    143 ;	-----------------------------------------
      0080CB                        144 _main:
                                    145 ;	leds.c: 11: GPIOC->DDR |= GPIO_PIN_3 | GPIO_PIN_4;
      0080CB AE 50 0C         [ 2]  146 	ldw	x, #0x500c
      0080CE F6               [ 1]  147 	ld	a, (x)
      0080CF AA 18            [ 1]  148 	or	a, #0x18
      0080D1 AE 50 0C         [ 2]  149 	ldw	x, #0x500c
      0080D4 F7               [ 1]  150 	ld	(x), a
                                    151 ;	leds.c: 12: GPIOC->CR1 |= GPIO_PIN_3 | GPIO_PIN_4;
      0080D5 AE 50 0D         [ 2]  152 	ldw	x, #0x500d
      0080D8 F6               [ 1]  153 	ld	a, (x)
      0080D9 AA 18            [ 1]  154 	or	a, #0x18
      0080DB AE 50 0D         [ 2]  155 	ldw	x, #0x500d
      0080DE F7               [ 1]  156 	ld	(x), a
                                    157 ;	leds.c: 13: GPIOC->ODR |= GPIO_PIN_3;
      0080DF AE 50 0A         [ 2]  158 	ldw	x, #0x500a
      0080E2 F6               [ 1]  159 	ld	a, (x)
      0080E3 AA 08            [ 1]  160 	or	a, #0x08
      0080E5 AE 50 0A         [ 2]  161 	ldw	x, #0x500a
      0080E8 F7               [ 1]  162 	ld	(x), a
                                    163 ;	leds.c: 15: while(1)            
      0080E9                        164 00102$:
                                    165 ;	leds.c: 17: delay(20000);
      0080E9 4B 20            [ 1]  166 	push	#0x20
      0080EB 4B 4E            [ 1]  167 	push	#0x4e
      0080ED 5F               [ 1]  168 	clrw	x
      0080EE 89               [ 2]  169 	pushw	x
      0080EF CD 80 A0         [ 4]  170 	call	_delay
      0080F2 5B 04            [ 2]  171 	addw	sp, #4
                                    172 ;	leds.c: 18: GPIOC->ODR ^= GPIO_PIN_3 | GPIO_PIN_4;
      0080F4 AE 50 0A         [ 2]  173 	ldw	x, #0x500a
      0080F7 F6               [ 1]  174 	ld	a, (x)
      0080F8 A8 18            [ 1]  175 	xor	a, #0x18
      0080FA AE 50 0A         [ 2]  176 	ldw	x, #0x500a
      0080FD F7               [ 1]  177 	ld	(x), a
      0080FE 20 E9            [ 2]  178 	jra	00102$
      008100 81               [ 4]  179 	ret
                                    180 	.area CODE
                                    181 	.area INITIALIZER
                                    182 	.area CABS (ABS)
